@using BlazorChatSample.Shared
@page "/"
@inject NavigationManager navigationManager

@if (inGame)
{
    <div class="sidebar">

    </div>
    <div class="top-row px-4 mainPage">
        <p>You are connected as <b>@startGameData.UserName</b> to the room <b>@startGameData.GroupName</b> </p>
        <button class="btn btn-sm btn-warning ml-md-auto" @onclick="@DisconnectAsync">Disconnect</button>
    </div>


    <ChatView ChatClient="@client" />
   
}

@if (!inGame)
{
    <GameStart RoomDataClient="@client" OnGameStart="@StartGame" />
    <h2></h2>
    @if (message != null)
    {
        <div class="invalid-feedback">@message</div>
        <small id="emailHelp" class="form-text text-muted">@message</small>
    }
}

@code  {
    bool inGame = false;

    string message = null;

    GameClient client = new GameClient();

    StartGameData startGameData = null;





    protected override async Task OnInitializedAsync()
    {
        client.Init(navigationManager.BaseUri);
        Console.WriteLine("Index: chart starting...");
        await client.StartAsync();
        Console.WriteLine("Index: chart started?");
    }

    async Task StartGame(StartGameData data)
    {
        if (string.IsNullOrWhiteSpace(data.UserName))
        {
            message = "Please enter a name";
            return;
        };
        if (string.IsNullOrWhiteSpace(data.GroupName))
        {
            message = "Please select room";
            return;
        };
        try
        {
            startGameData = data;
            await client.StartGame(data.UserName, data.GroupName);
            inGame = true;
        }
        catch (Exception e)
        {
            message = $"ERROR: Failed to start chat client: {e.Message}";
            Console.WriteLine(e.Message);
            Console.WriteLine(e.StackTrace);
        }
    }




    async Task DisconnectAsync()
    {
        if (inGame)
        {
            await client.ExitGroup(startGameData.GroupName);
            message = "";
            inGame = false;
        }
    }




}
