@using BlazorChatSample.Shared
<p>
    Enter your name:
</p>
<input type="text" maxlength="32" @bind="@username" />

<p>
    create new room:
</p>
<input type="text" maxlength="32" @bind="@NewRoomName" />
<button type="button" @onclick="@(()=>StartRoom(NewRoomName))"><span class="oi oi-chat" aria-hidden="true"></span> Create room</button>

<p>
    Select room:
</p>

@foreach (var room in AvailableGroups)
{
    <div>
        <div class="user">@room.Name</div>
        <div class="msg">@room.GuestCount</div>
        <button type="button" @onclick="@(() => StartRoom(room.Name))"><span class="oi oi-chat" aria-hidden="true"></span>Join</button>
    </div>
}

@code {

    public List<Group> AvailableGroups { get; set; }= new List<Group>();

    public string username { get; set; }
    public string NewRoomName { get; set; }

    [Parameter]
    public EventCallback<StartGameData> OnGameStart { get; set; }

    [Parameter]
    public IRoomDataClient RoomDataClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        RoomDataClient.GroupChanged += this.GroupChanged;
        RoomDataClient.GroupRemoved += this.GroupRemoved;
    }

    private void StartRoom(string roomName)
    {
        if (OnGameStart.HasDelegate)
        {
            OnGameStart.InvokeAsync(new StartGameData(){GroupName = roomName,UserName = username});
        }
    }

    void GroupRemoved(object sender, RoomUpdateEventArgs e)
    {
        Console.WriteLine($"Room Removed: {e.RoomName} {e.Guests}");
        var target = AvailableGroups.RemoveAll(x => x.Name == e.RoomName);
        StateHasChanged();
    }

    void GroupChanged(object sender, RoomUpdateEventArgs e)
    {
        Console.WriteLine($"Room Added: {e.RoomName} {e.Guests}");
        var target = AvailableGroups.FirstOrDefault(x => x.Name == e.RoomName);
        if (target != null)
        {
            target.GuestCount = e.Guests;
        }
        else
        {
            this.AvailableGroups.Add(new Group() { Name = e.RoomName, GuestCount = e.Guests });
        }
        StateHasChanged();
    }

    }
